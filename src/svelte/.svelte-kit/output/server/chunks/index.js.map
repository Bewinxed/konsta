{"version":3,"file":"index.js","sources":["../../../../node_modules/svelte/src/internal/shared/utils.js","../../../../node_modules/svelte/src/store/utils.js","../../../../node_modules/svelte/src/constants.js","../../../../node_modules/svelte/src/internal/shared/errors.js","../../../../node_modules/svelte/src/internal/server/context.js","../../../../node_modules/svelte/src/internal/server/hydration.js","../../../../node_modules/svelte/src/internal/server/index.js"],"sourcesContent":["// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var object_assign = Object.assign;\nexport var is_frozen = Object.isFrozen;\nexport var object_freeze = Object.freeze;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n","/** @import { Readable } from './public' */\nimport { noop } from '../internal/shared/utils.js';\n\n/**\n * @template T\n * @param {Readable<T> | null | undefined} store\n * @param {(value: T) => void} run\n * @param {(value: T) => void} [invalidate]\n * @returns {() => void}\n */\nexport function subscribe_to_store(store, run, invalidate) {\n\tif (store == null) {\n\t\t// @ts-expect-error\n\t\trun(undefined);\n\n\t\t// @ts-expect-error\n\t\tif (invalidate) invalidate(undefined);\n\n\t\treturn noop;\n\t}\n\n\t// Svelte store takes a private second argument\n\tconst unsub = store.subscribe(\n\t\trun,\n\t\t// @ts-expect-error\n\t\tinvalidate\n\t);\n\n\t// Also support RxJS\n\t// @ts-expect-error TODO fix this in the types?\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\nexport const EACH_KEYED = 1 << 2;\n\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 3;\nexport const EACH_IS_ANIMATED = 1 << 4;\nexport const EACH_IS_STRICT_EQUALS = 1 << 6;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 3;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"invalid_default_snippet\");\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_outside_component\");\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"store_invalid_shape\");\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"svelte_element_invalid_this_value\");\n\t}\n}","/** @import { Component } from '#server' */\nimport { DEV } from 'esm-env';\nimport { on_destroy } from './index.js';\nimport * as e from '../shared/errors.js';\n\n/** @type {Component | null} */\nexport var current_component = null;\n\n/**\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\treturn result;\n}\n\n/**\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_or_init_context_map('setContext').set(key, context);\n\treturn context;\n}\n\n/**\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_or_init_context_map('hasContext').has(key);\n}\n\n/** @returns {Map<any, any>} */\nexport function getAllContexts() {\n\treturn get_or_init_context_map('getAllContexts');\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (current_component === null) {\n\t\te.lifecycle_outside_component(name);\n\t}\n\n\treturn (current_component.c ??= new Map(get_parent_context(current_component) || undefined));\n}\n\n/**\n * @param {Function} [fn]\n */\nexport function push(fn) {\n\tcurrent_component = { p: current_component, c: null, d: null };\n\tif (DEV) {\n\t\t// component function\n\t\tcurrent_component.function = fn;\n\t}\n}\n\nexport function pop() {\n\tvar component = /** @type {Component} */ (current_component);\n\n\tvar ondestroy = component.d;\n\n\tif (ondestroy) {\n\t\ton_destroy.push(...ondestroy);\n\t}\n\n\tcurrent_component = component.p;\n}\n\n/**\n * @param {Component} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\n\treturn null;\n}\n","import { HYDRATION_END, HYDRATION_START, HYDRATION_START_ELSE } from '../../constants.js';\n\nexport const BLOCK_OPEN = `<!--${HYDRATION_START}-->`;\nexport const BLOCK_OPEN_ELSE = `<!--${HYDRATION_START_ELSE}-->`;\nexport const BLOCK_CLOSE = `<!--${HYDRATION_END}-->`;\nexport const EMPTY_COMMENT = `<!---->`;\n","/** @import { ComponentType, SvelteComponent } from 'svelte' */\n/** @import { Component, Payload, RenderOutput } from '#server' */\n/** @import { Store } from '#shared' */\nexport { FILENAME, HMR } from '../../constants.js';\nimport { is_promise, noop } from '../shared/utils.js';\nimport { subscribe_to_store } from '../../store/utils.js';\nimport {\n\tUNINITIALIZED,\n\tELEMENT_PRESERVE_ATTRIBUTE_CASE,\n\tELEMENT_IS_NAMESPACED\n} from '../../constants.js';\n\nimport { escape_html } from '../../escaping.js';\nimport { DEV } from 'esm-env';\nimport { current_component, pop, push } from './context.js';\nimport { EMPTY_COMMENT, BLOCK_CLOSE, BLOCK_OPEN } from './hydration.js';\nimport { validate_store } from '../shared/validate.js';\nimport { is_boolean_attribute, is_void } from '../../utils.js';\n\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nconst INVALID_ATTR_NAME_CHAR_REGEX =\n\t/[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = ['textarea', 'script', 'style', 'title'];\n\n/**\n * @param {Payload} to_copy\n * @returns {Payload}\n */\nexport function copy_payload({ out, css, head }) {\n\treturn {\n\t\tout,\n\t\tcss: new Set(css),\n\t\thead: {\n\t\t\ttitle: head.title,\n\t\t\tout: head.out\n\t\t}\n\t};\n}\n\n/**\n * Assigns second payload to first\n * @param {Payload} p1\n * @param {Payload} p2\n * @returns {void}\n */\nexport function assign_payload(p1, p2) {\n\tp1.out = p2.out;\n\tp1.head = p2.head;\n}\n\n/**\n * @param {Payload} payload\n * @param {string} tag\n * @param {() => void} attributes_fn\n * @param {() => void} children_fn\n * @returns {void}\n */\nexport function element(payload, tag, attributes_fn = noop, children_fn = noop) {\n\tpayload.out += '<!---->';\n\n\tif (tag) {\n\t\tpayload.out += `<${tag} `;\n\t\tattributes_fn();\n\t\tpayload.out += `>`;\n\n\t\tif (!is_void(tag)) {\n\t\t\tchildren_fn();\n\t\t\tif (!RAW_TEXT_ELEMENTS.includes(tag)) {\n\t\t\t\tpayload.out += EMPTY_COMMENT;\n\t\t\t}\n\t\t\tpayload.out += `</${tag}>`;\n\t\t}\n\t}\n\n\tpayload.out += '<!---->';\n}\n\n/**\n * Array of `onDestroy` callbacks that should be called at the end of the server render function\n * @type {Function[]}\n */\nexport let on_destroy = [];\n\n/**\n * Only available on the server and when compiling with the `server` option.\n * Takes a component and returns an object with `body` and `head` properties on it, which you can use to populate the HTML when server-rendering your app.\n * @template {Record<string, any>} Props\n * @param {import('svelte').Component<Props> | ComponentType<SvelteComponent<Props>>} component\n * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any> }} [options]\n * @returns {RenderOutput}\n */\nexport function render(component, options = {}) {\n\t/** @type {Payload} */\n\tconst payload = { out: '', css: new Set(), head: { title: '', out: '' } };\n\n\tconst prev_on_destroy = on_destroy;\n\ton_destroy = [];\n\tpayload.out += BLOCK_OPEN;\n\n\tif (options.context) {\n\t\tpush();\n\t\t/** @type {Component} */ (current_component).c = options.context;\n\t}\n\n\t// @ts-expect-error\n\tcomponent(payload, options.props ?? {}, {}, {});\n\n\tif (options.context) {\n\t\tpop();\n\t}\n\n\tpayload.out += BLOCK_CLOSE;\n\tfor (const cleanup of on_destroy) cleanup();\n\ton_destroy = prev_on_destroy;\n\n\tlet head = payload.head.out + payload.head.title;\n\n\tfor (const { hash, code } of payload.css) {\n\t\thead += `<style id=\"${hash}\">${code}</style>`;\n\t}\n\n\treturn {\n\t\thead,\n\t\thtml: payload.out,\n\t\tbody: payload.out\n\t};\n}\n\n/**\n * @param {Payload} payload\n * @param {(head_payload: Payload['head']) => void} fn\n * @returns {void}\n */\nexport function head(payload, fn) {\n\tconst head_payload = payload.head;\n\thead_payload.out += BLOCK_OPEN;\n\tfn(head_payload);\n\thead_payload.out += BLOCK_CLOSE;\n}\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean) || (value === '' && name === 'class')) return '';\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(value, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * @param {Payload} payload\n * @param {boolean} is_html\n * @param {Record<string, string>} props\n * @param {() => void} component\n * @param {boolean} dynamic\n * @returns {void}\n */\nexport function css_props(payload, is_html, props, component, dynamic = false) {\n\tconst styles = style_object_to_string(props);\n\n\tif (is_html) {\n\t\tpayload.out += `<div style=\"display: contents; ${styles}\">`;\n\t} else {\n\t\tpayload.out += `<g style=\"${styles}\">`;\n\t}\n\n\tif (dynamic) {\n\t\tpayload.out += '<!---->';\n\t}\n\n\tcomponent();\n\n\tif (is_html) {\n\t\tpayload.out += `<!----></div>`;\n\t} else {\n\t\tpayload.out += `<!----></g>`;\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} attrs\n * @param {Record<string, string>} [classes]\n * @param {Record<string, string>} [styles]\n * @param {number} [flags]\n * @returns {string}\n */\nexport function spread_attributes(attrs, classes, styles, flags = 0) {\n\tif (styles) {\n\t\tattrs.style = attrs.style\n\t\t\t? style_object_to_string(merge_styles(/** @type {string} */ (attrs.style), styles))\n\t\t\t: style_object_to_string(styles);\n\t}\n\n\tif (classes) {\n\t\tconst classlist = attrs.class ? [attrs.class] : [];\n\n\t\tfor (const key in classes) {\n\t\t\tif (classes[key]) {\n\t\t\t\tclasslist.push(key);\n\t\t\t}\n\t\t}\n\n\t\tattrs.class = classlist.join(' ');\n\t}\n\n\tlet attr_str = '';\n\tlet name;\n\n\tconst is_html = (flags & ELEMENT_IS_NAMESPACED) === 0;\n\tconst lowercase = (flags & ELEMENT_PRESERVE_ATTRIBUTE_CASE) === 0;\n\n\tfor (name in attrs) {\n\t\t// omit functions, internal svelte properties and invalid attribute names\n\t\tif (typeof attrs[name] === 'function') continue;\n\t\tif (name[0] === '$' && name[1] === '$') continue; // faster than name.startsWith('$$')\n\t\tif (INVALID_ATTR_NAME_CHAR_REGEX.test(name)) continue;\n\n\t\tif (lowercase) {\n\t\t\tname = name.toLowerCase();\n\t\t}\n\n\t\tattr_str += attr(name, attrs[name], is_html && is_boolean_attribute(name));\n\t}\n\n\treturn attr_str;\n}\n\n/**\n * @param {Record<string, unknown>[]} props\n * @returns {Record<string, unknown>}\n */\nexport function spread_props(props) {\n\t/** @type {Record<string, unknown>} */\n\tconst merged_props = {};\n\tlet key;\n\n\tfor (let i = 0; i < props.length; i++) {\n\t\tconst obj = props[i];\n\t\tfor (key in obj) {\n\t\t\tmerged_props[key] = obj[key];\n\t\t}\n\t}\n\treturn merged_props;\n}\n\n/**\n * @param {unknown} value\n * @returns {string}\n */\nexport function stringify(value) {\n\treturn typeof value === 'string' ? value : value == null ? '' : value + '';\n}\n\n/** @param {Record<string, string>} style_object */\nfunction style_object_to_string(style_object) {\n\treturn Object.keys(style_object)\n\t\t.filter(/** @param {any} key */ (key) => style_object[key] != null && style_object[key] !== '')\n\t\t.map(/** @param {any} key */ (key) => `${key}: ${escape_html(style_object[key], true)};`)\n\t\t.join(' ');\n}\n\n/** @param {Record<string, string>} style_object */\nexport function add_styles(style_object) {\n\tconst styles = style_object_to_string(style_object);\n\treturn styles ? ` style=\"${styles}\"` : '';\n}\n\n/**\n * @param {string} attribute\n * @param {Record<string, string>} styles\n */\nexport function merge_styles(attribute, styles) {\n\t/** @type {Record<string, string>} */\n\tvar merged = {};\n\n\tif (attribute) {\n\t\tfor (var declaration of attribute.split(';')) {\n\t\t\tvar i = declaration.indexOf(':');\n\t\t\tvar name = declaration.slice(0, i).trim();\n\t\t\tvar value = declaration.slice(i + 1).trim();\n\n\t\t\tif (name !== '') merged[name] = value;\n\t\t}\n\t}\n\n\tfor (name in styles) {\n\t\tmerged[name] = styles[name];\n\t}\n\n\treturn merged;\n}\n\n/**\n * @template V\n * @param {Record<string, [any, any, any]>} store_values\n * @param {string} store_name\n * @param {Store<V> | null | undefined} store\n * @returns {V}\n */\nexport function store_get(store_values, store_name, store) {\n\tif (DEV) {\n\t\tvalidate_store(store, store_name.slice(1));\n\t}\n\n\t// it could be that someone eagerly updates the store in the instance script, so\n\t// we should only reuse the store value in the template\n\tif (store_name in store_values && store_values[store_name][0] === store) {\n\t\treturn store_values[store_name][2];\n\t}\n\n\tstore_values[store_name]?.[1](); // if store was switched, unsubscribe from old store\n\tstore_values[store_name] = [store, null, undefined];\n\tconst unsub = subscribe_to_store(\n\t\tstore,\n\t\t/** @param {any} v */ (v) => (store_values[store_name][2] = v)\n\t);\n\tstore_values[store_name][1] = unsub;\n\treturn store_values[store_name][2];\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Updates a store with a new value.\n * @template V\n * @param {Record<string, [any, any, any]>} store_values\n * @param {string} store_name\n * @param {Store<V>} store\n * @param {any} expression\n */\nexport function store_mutate(store_values, store_name, store, expression) {\n\tstore_set(store, store_get(store_values, store_name, store));\n\treturn expression;\n}\n\n/**\n * @param {Record<string, [any, any, any]>} store_values\n * @param {string} store_name\n * @param {Store<number>} store\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store_values, store_name, store, d = 1) {\n\tlet store_value = store_get(store_values, store_name, store);\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Record<string, [any, any, any]>} store_values\n * @param {string} store_name\n * @param {Store<number>} store\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store_pre(store_values, store_name, store, d = 1) {\n\tconst value = store_get(store_values, store_name, store) + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/** @param {Record<string, [any, any, any]>} store_values */\nexport function unsubscribe_stores(store_values) {\n\tfor (const store_name in store_values) {\n\t\tstore_values[store_name][1]();\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {() => V} fallback lazy because could contain side effects\n * @returns {V}\n */\nexport function value_or_fallback(value, fallback) {\n\treturn value === undefined ? fallback() : value;\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {() => Promise<V>} fallback lazy because could contain side effects\n * @returns {Promise<V>}\n */\nexport async function value_or_fallback_async(value, fallback) {\n\treturn value === undefined ? fallback() : value;\n}\n\n/**\n * @param {Payload} payload\n * @param {void | ((payload: Payload, props: Record<string, unknown>) => void)} slot_fn\n * @param {Record<string, unknown>} slot_props\n * @param {null | (() => void)} fallback_fn\n * @returns {void}\n */\nexport function slot(payload, slot_fn, slot_props, fallback_fn) {\n\tif (slot_fn !== undefined) {\n\t\tslot_fn(payload, slot_props);\n\t} else {\n\t\tfallback_fn?.();\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} rest\n * @returns {Record<string, unknown>}\n */\nexport function rest_props(props, rest) {\n\t/** @type {Record<string, unknown>} */\n\tconst rest_props = {};\n\tlet key;\n\tfor (key in props) {\n\t\tif (!rest.includes(key)) {\n\t\t\trest_props[key] = props[key];\n\t\t}\n\t}\n\treturn rest_props;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @returns {Record<string, unknown>}\n */\nexport function sanitize_props(props) {\n\tconst { children, $$slots, ...sanitized } = props;\n\treturn sanitized;\n}\n\n/**\n * @param {Record<string, any>} props\n * @returns {Record<string, boolean>}\n */\nexport function sanitize_slots(props) {\n\t/** @type {Record<string, boolean>} */\n\tconst sanitized = {};\n\tif (props.children) sanitized.default = true;\n\tfor (const key in props.$$slots) {\n\t\tsanitized[key] = true;\n\t}\n\treturn sanitized;\n}\n\n/**\n * Legacy mode: If the prop has a fallback and is bound in the\n * parent component, propagate the fallback value upwards.\n * @param {Record<string, unknown>} props_parent\n * @param {Record<string, unknown>} props_now\n */\nexport function bind_props(props_parent, props_now) {\n\tfor (const key in props_now) {\n\t\tconst initial_value = props_parent[key];\n\t\tconst value = props_now[key];\n\t\tif (\n\t\t\tinitial_value === undefined &&\n\t\t\tvalue !== undefined &&\n\t\t\tObject.getOwnPropertyDescriptor(props_parent, key)?.set\n\t\t) {\n\t\t\tprops_parent[key] = value;\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Promise<V>} promise\n * @param {null | (() => void)} pending_fn\n * @param {(value: V) => void} then_fn\n * @returns {void}\n */\nfunction await_block(promise, pending_fn, then_fn) {\n\tif (is_promise(promise)) {\n\t\tpromise.then(null, noop);\n\t\tif (pending_fn !== null) {\n\t\t\tpending_fn();\n\t\t}\n\t} else if (then_fn !== null) {\n\t\tthen_fn(promise);\n\t}\n}\n\nexport { await_block as await };\n\n/** @param {any} array_like_or_iterator */\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n/**\n * @param {any[]} args\n * @param {Function} [inspect]\n */\n// eslint-disable-next-line no-console\nexport function inspect(args, inspect = console.log) {\n\tinspect('init', ...args);\n}\n\n/**\n * @template V\n * @param {() => V} get_value\n */\nexport function once(get_value) {\n\tlet value = /** @type {V} */ (UNINITIALIZED);\n\treturn () => {\n\t\tif (value === UNINITIALIZED) {\n\t\t\tvalue = get_value();\n\t\t}\n\t\treturn value;\n\t};\n}\n\nexport { html } from './blocks/html.js';\n\nexport { push, pop } from './context.js';\n\nexport { push_element, pop_element } from './dev.js';\n\nexport { snapshot } from '../shared/clone.js';\n\nexport {\n\tinvalid_default_snippet,\n\tvalidate_dynamic_element_tag,\n\tvalidate_void_dynamic_element\n} from '../shared/validate.js';\n\nexport { escape_html as escape };\n\nexport { default_slot } from '../client/dom/legacy/misc.js';\n"],"names":["e.lifecycle_outside_component"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}